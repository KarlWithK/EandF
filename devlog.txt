<!-- Instructions -->
Devlog allows any group member at any time to see the current state of the project.
PM will make sure devlog is being maintained, but will not make all entries.
The devlog should be a plain text file, stored in the specified location.
When any team member stops working and pushes changes to github, they should update the devlog explaining what changes have been made. Include errors/bugs discovered (or created).
Separate devlog entries with a newline.
Most recent entry at the bottom.
Each entry should begin with the following format: firstL -- TIMESTAMP\n ( e.g.: topherM -- 1999-12-31 23:59 )
<!-- Instructions -->

carlosH -- 2020-12-07 18:54
- updated the structure of the project
- created the basic application

ameliaC, carlosH, arielS, ericL -- 2020-12-17 21:30
- created the first edition of design.pdf 
- fixed a few typos in devlog

ameliaC, carlosH, arielS, ericL -- 2020-12-23 20:26
- edited design.pdf to add more specificity to our task breakdown 
- reuploaded edited design.pdf

ericL, ameliaC, arielS -- 2021-01-04 09:34
- fixed date data type in design.pdf; changed to text 
- added deadlines into timeline
- resolved all issues with comments, put "no action required" when appropriate
- updated README.md's project title, description, and roles
- discussed code that we worked on over break: db manager and flask app

ericL, ameliaC, arielS, carlosH -- 2021-01-04 22:11
- filled in the database-related in the flask app
- wrote error, login, register templates
- tested prototype, ran into bugs (database issues)

ericL, arielS -- 2021-01-05 20:57
- added more db methods for getting user blog data and all users and getting username from user id 
- updated profile route for flask app 
- created home route

ameliaC, carlosH -- 2021-01-05 20:57
- worked on createBlogForm.html, home.html, profile.html, blog.html
- added some bootstrap and other CSS styling

ericL, ameliaC, arielS, carlosH -- 2021-01-05 20:57
- fixed the database issues
- successfully tested the login, register, logout, session remembering login functionalities
- began to integrate the flask app with the html templates in terms of passing arguments to one another

ericL, arielS,  -- 2021-01-06 22:58
- updated home route
- replaced a few render_templates() with redirect()
- updated createBlogForm, yourBlog routes
- updated getAllUsers(), getBlogBasic() methods
- added createEntry(), getBlogEntries(), getEntryInfo() methods

ameliaC -- 2021-01-06 22:58
- fixed looping and index issue in Jinja for displaying all blogs on home page
- finished home.html
- worked on yourBlog.html, but it hasn't been tested yet
- started addEntryForm.html

carlosH -- 2021-01-06 22:58
- added Bootstrap and CSS styling to all of our pages
- had to remove Boostrap for testing purposes, then added it back
- also helped out on forms/data passage from home.html to yourBlog.html

arielS, ameliaC, carlosH, ericL -- 2021-01-06 22:58
- overall did a lot of testing and debugging, mostly on home.html, and fixed code accordingly

arielS, carlosH, ericL -- 2021-01-07 21:16
- prevented people from registering with already existing usernames
- separated the error page generated when creating a blank blog from the error page generated after a false login or registration
- fixed add entry functionality to redirect user to the home page in order to avoid an error with query strings
- added error for adding a blank entry to a blog

ameliaC -- 2021-01-07 21:50
- created blogError.html, entryError.html, blog.html
- updated home.html, yourBlog.html, addEntryForm.html
- made team flag
- updated design doc to reflect edits in the project during development

ericL, ameliaC -- 2021-01-07 22:23
- created editEntryForm.html
- updated yourBlog.html with edit entry buttons

carlosH, arielS -- 2021-01-07 22:30
- added profile functionality
- updated profile.html and profile route (viewing other people's profiles and going to their blogs will take you to a non-editable blog)
- added db method getBlogUser 

ericL, arielS -- 2021-01-08 00:10
- added edit entry route and edit entry read route
- added db method editEntry
